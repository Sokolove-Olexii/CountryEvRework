{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,SCKA,MAAM,EAAgB,CACpB,UACA,YACA,QACA,WACA,OACA,MACA,KACD,CAEK,EACJ,CAAa,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAc,MAAM,EAAE,CAMjE,eAAe,EAAU,CAAC,EACxB,IAAM,EAAkB,MAAM,MAC5B,CAAC,4EAA4E,EAAE,EAAA,OAAM,CAAE,SAAS,EAAE,EAAA,CAAmB,EAEjH,EAAO,MAAM,EAAgB,IAAI,GAGvC,GAFA,QAAQ,GAAG,CAAC,GAER,EAAK,SAAS,EAAI,EAAK,SAAS,CAAC,MAAM,CAAE,CAC3C,IAAM,EAAQ,EAAK,SAAS,CAAC,MAAM,CACnC,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,EACd,MAEE,QAAQ,GAAG,CAAC,UAEhB,CAlBA,SAAS,gBAAgB,CAAC,mBAAoB,MAAM,IAClD,MAAM,EAAU,EAClB","sources":["<anon>","src/js/firsEventLoading.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirecb48\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirecb48\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $6ta99 = parcelRequire(\"6ta99\");\n\nvar $7e6a9 = parcelRequire(\"7e6a9\");\n// import { createToast } from './searchByName';\n// import geohash from 'ngeohash';\nconst $d32667d63b42c23d$var$firstLoadMass = [\n    'imagine',\n    'metallica',\n    'harry',\n    'new york',\n    'musa',\n    'nba',\n    'es'\n];\nconst $d32667d63b42c23d$var$firstLoadRandMass = $d32667d63b42c23d$var$firstLoadMass[Math.floor(Math.random() * $d32667d63b42c23d$var$firstLoadMass.length)];\ndocument.addEventListener('DOMContentLoaded', async (e)=>{\n    await $d32667d63b42c23d$var$firstload(e);\n});\nasync function $d32667d63b42c23d$var$firstload(e) {\n    const responseLoading = await fetch(`https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&apikey=${(0, $7e6a9.API_KEY)}&keyword=${$d32667d63b42c23d$var$firstLoadRandMass}`);\n    const data = await responseLoading.json();\n    console.log(data);\n    if (data._embedded && data._embedded.events) {\n        const event = data._embedded.events;\n        (0, $6ta99.renderCards)(event);\n    } else // createToast('Помилка завантаження');\n    console.log('warning');\n} // import { renderCards } from './cards';\n // import { API_KEY } from './searchByCountry';\n // import geohash from 'ngeohash';\n // // const language = navigator.language || navigator.userAgent;\n // document.addEventListener('DOMContentLoaded', e => {\n //   firstload(e);\n // });\n // // fetchIventsGeo(getLocation());\n // // RenderGeolocation();\n // async function RenderGeolocation() {\n //   try {\n //     const { latitude, longitude } = await getLocation();\n //     const events = await fetchIventsGeo(longitude, latitude);\n //     console.log(longitude, latitude);\n //     await renderCards(events);\n //     console.log(events);\n //   } catch (error) {\n //     console.error('Error fetching geolocation:', error);\n //   }\n // }\n // async function fetchIventsGeo(longitude, latitude) {\n //   try {\n //     const geohashValue = await geohash.encode(latitude, longitude);\n //     console.log(geohashValue);\n //     console.log(await longitude);\n //     const response = await fetch(\n //       `https://app.ticketmaster.com/discovery/v2/events.json?apikey=${API_KEY}&geoPoint=${geohashValue}&radius=50&unit=km`\n //     );\n //     const data = await response.json();\n //     console.log(data);\n //     return data._embedded.events;\n //   } catch (error) {\n //     console.log(error.message);\n //     return [];\n //   }\n // }\n // function getLocation() {\n //   return new Promise((resolve, reject) => {\n //     if (navigator.geolocation) {\n //       navigator.geolocation.getCurrentPosition(\n //         position => {\n //           const { latitude, longitude } = position.coords;\n //           resolve({ latitude, longitude });\n //         },\n //         error => {\n //           reject(error);\n //         }\n //       );\n //     } else {\n //       reject(new Error('Геолокація не підтримується'));\n //     }\n //   });\n // }\n // async function locate(e) {\n //   if (navigator.geolocation) {\n //     navigator.geolocation.getCurrentPosition(\n //       async position => {\n //         console.log(position.coords);\n //         const { longitude, latitude } = position.coords;\n //         const geohashValue = geohash.encode(latitude, longitude);\n //         console.log(geohashValue);\n //         const response = await fetch(\n //           `https://app.ticketmaster.com/discovery/v2/events.json?apikey=${API_KEY}&geoPoint=${geohashValue}&radius=50&unit=km`\n //         );\n //         const data = await response.json();\n //         const event = data._embedded.events;\n //         renderCards(event);\n //       },\n //       error => {\n //         console.log(error.message);\n //       }\n //     );\n //   } else {\n //     console.log('Геолокація не підтримується');\n //   }\n // }\n // locate();\n // async function firstload(e) {\n //   const responseLoading = await fetch(\n //     `https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&apikey=${API_KEY}`\n //   );\n //   const data = await responseLoading.json();\n //   console.log(data);\n //   const event = data._embedded.events;\n //   renderCards(event);\n // }\n // firstload();\n\n\n//# sourceMappingURL=CountryEvRework.88e8be3c.js.map\n","import { renderCards } from './cards';\nimport { API_KEY } from './searchByCountry';\n// import { createToast } from './searchByName';\n// import geohash from 'ngeohash';\n\nconst firstLoadMass = [\n  'imagine',\n  'metallica',\n  'harry',\n  'new york',\n  'musa',\n  'nba',\n  'es',\n];\n\nconst firstLoadRandMass =\n  firstLoadMass[Math.floor(Math.random() * firstLoadMass.length)];\n\ndocument.addEventListener('DOMContentLoaded', async e => {\n  await firstload(e);\n});\n\nasync function firstload(e) {\n  const responseLoading = await fetch(\n    `https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&apikey=${API_KEY}&keyword=${firstLoadRandMass}`\n  );\n  const data = await responseLoading.json();\n  console.log(data);\n\n  if (data._embedded && data._embedded.events) {\n    const event = data._embedded.events;\n    renderCards(event);\n  } else {\n    // createToast('Помилка завантаження');\n    console.log('warning');\n  }\n}\n\n// import { renderCards } from './cards';\n// import { API_KEY } from './searchByCountry';\n// import geohash from 'ngeohash';\n\n// // const language = navigator.language || navigator.userAgent;\n\n// document.addEventListener('DOMContentLoaded', e => {\n//   firstload(e);\n// });\n// // fetchIventsGeo(getLocation());\n// // RenderGeolocation();\n\n// async function RenderGeolocation() {\n//   try {\n//     const { latitude, longitude } = await getLocation();\n//     const events = await fetchIventsGeo(longitude, latitude);\n//     console.log(longitude, latitude);\n//     await renderCards(events);\n//     console.log(events);\n//   } catch (error) {\n//     console.error('Error fetching geolocation:', error);\n//   }\n// }\n\n// async function fetchIventsGeo(longitude, latitude) {\n//   try {\n//     const geohashValue = await geohash.encode(latitude, longitude);\n//     console.log(geohashValue);\n//     console.log(await longitude);\n//     const response = await fetch(\n//       `https://app.ticketmaster.com/discovery/v2/events.json?apikey=${API_KEY}&geoPoint=${geohashValue}&radius=50&unit=km`\n//     );\n//     const data = await response.json();\n//     console.log(data);\n//     return data._embedded.events;\n//   } catch (error) {\n//     console.log(error.message);\n//     return [];\n//   }\n// }\n\n// function getLocation() {\n//   return new Promise((resolve, reject) => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         position => {\n//           const { latitude, longitude } = position.coords;\n//           resolve({ latitude, longitude });\n//         },\n//         error => {\n//           reject(error);\n//         }\n//       );\n//     } else {\n//       reject(new Error('Геолокація не підтримується'));\n//     }\n//   });\n// }\n\n// async function locate(e) {\n//   if (navigator.geolocation) {\n//     navigator.geolocation.getCurrentPosition(\n//       async position => {\n//         console.log(position.coords);\n//         const { longitude, latitude } = position.coords;\n\n//         const geohashValue = geohash.encode(latitude, longitude);\n//         console.log(geohashValue);\n//         const response = await fetch(\n//           `https://app.ticketmaster.com/discovery/v2/events.json?apikey=${API_KEY}&geoPoint=${geohashValue}&radius=50&unit=km`\n//         );\n//         const data = await response.json();\n//         const event = data._embedded.events;\n//         renderCards(event);\n//       },\n//       error => {\n//         console.log(error.message);\n//       }\n//     );\n//   } else {\n//     console.log('Геолокація не підтримується');\n//   }\n// }\n// locate();\n\n// async function firstload(e) {\n//   const responseLoading = await fetch(\n//     `https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&apikey=${API_KEY}`\n//   );\n//   const data = await responseLoading.json();\n//   console.log(data);\n//   const event = data._embedded.events;\n//   renderCards(event);\n// }\n\n// firstload();\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6ta99","$7e6a9","$d32667d63b42c23d$var$firstLoadMass","$d32667d63b42c23d$var$firstLoadRandMass","Math","floor","random","length","$d32667d63b42c23d$var$firstload","e","responseLoading","fetch","API_KEY","data","json","console","log","_embedded","events","event","renderCards","document","addEventListener"],"version":3,"file":"CountryEvRework.88e8be3c.js.map"}